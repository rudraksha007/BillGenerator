/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package me.rudraksha007.billgenui.GUI;

import me.rudraksha007.billgenui.AppFrame;
import me.rudraksha007.billgenui.DataManager;
import me.rudraksha007.billgenui.Item;
import me.rudraksha007.billgenui.Main;

import javax.swing.*;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Map;

/**
 *
 * @author rudra
 */
public class AddProduct extends javax.swing.JFrame {

    /**
     * Creates new form AddProduct
     */
    public AddProduct() {
        initComponents();
        this.setLocationRelativeTo(null);
        btnCancel.setFocusPainted(false);
        btnClear.setFocusPainted(false);
        btnSave.setFocusPainted(false);

        cmbBrands.getEditor().getEditorComponent().addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                List<String>list = new ArrayList<>();
                DefaultComboBoxModel<String>model = (DefaultComboBoxModel<String>) cmbBrands.getModel();
                for (int i = 1; i < cmbBrands.getModel().getSize(); i++) {
                    list.add(cmbBrands.getModel().getElementAt(i));
                }
                model.removeAllElements();
                model.addElement("");
                model.addAll(list);
            }

            @Override
            public void focusLost(FocusEvent e) {
                DefaultComboBoxModel<String>model = (DefaultComboBoxModel<String>) cmbBrands.getModel();
                if (cmbBrands.getSelectedIndex()==0){
                    List<String>list = new ArrayList<>();
                    for (int i = 1; i < cmbBrands.getModel().getSize(); i++) {
                        list.add(cmbBrands.getModel().getElementAt(i));
                    }
                    model.removeAllElements();
                    model.addElement("Select or Add Brand");
                    model.addAll(list);
                    return;
                }
                if (Main.items.containsKey(String.valueOf(cmbBrands.getSelectedItem()))){
                    model = (DefaultComboBoxModel<String>) cmbProduct.getModel();
                    for (Item item: Main.items.get(String.valueOf(model.getSelectedItem()))){
                        model.addElement(item.getName());
                    }
                }

            }
        });

        cmbProduct.getEditor().getEditorComponent().addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                List<String>list = new ArrayList<>();
                DefaultComboBoxModel<String>model = (DefaultComboBoxModel<String>) cmbProduct.getModel();
                for (int i = 1; i < cmbProduct.getModel().getSize(); i++) {
                    list.add(cmbProduct.getModel().getElementAt(i));
                }
                model.removeAllElements();
                model.addElement("");
                model.addAll(list);
            }

            @Override
            public void focusLost(FocusEvent e) {
                DefaultComboBoxModel<String>model = (DefaultComboBoxModel<String>) cmbProduct.getModel();
                if (cmbProduct.getSelectedIndex()==0){
                    List<String>list = new ArrayList<>();
                    for (int i = 1; i < cmbProduct.getModel().getSize(); i++) {
                        list.add(cmbProduct.getModel().getElementAt(i));
                    }
                    model.removeAllElements();
                    model.addElement("Select or Add Product");
                    model.addAll(list);
                    return;
                }
                if (cmbProduct.getSelectedIndex()>0){
                    String brand = String.valueOf(cmbBrands.getSelectedItem());
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cmbBrands = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtSize = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        list = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        btnSave = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        cmbProduct = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(400, 400));
        setPreferredSize(new java.awt.Dimension(400, 400));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setText("Brand Name");

        cmbBrands.setEditable(true);
        cmbBrands.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select or Add Brand" }));
        cmbBrands.setAutoscrolls(true);

        jLabel2.setText("Product Name");

        jLabel3.setText("Sizes");

        txtSize.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtSizeFocusGained(evt);
            }
        });
        txtSize.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSizeKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSizeKeyTyped(evt);
            }
        });

        list.setModel(new DefaultListModel<String>());
        list.setEnabled(false);
        jScrollPane1.setViewportView(list);

        jTextArea1.setColumns(20);
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(2);
        jTextArea1.setText("Enter the size value and press enter to add\nEnter new Brand (in the box) to add");
        jTextArea1.setWrapStyleWord(true);
        jTextArea1.setEnabled(false);
        jScrollPane2.setViewportView(jTextArea1);

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        jButton2.setText("Delete Size");

        btnClear.setText("Clear ");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        cmbProduct.setEditable(true);
        cmbProduct.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select or Add Product" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbBrands, 0, 0, Short.MAX_VALUE)
                            .addComponent(txtSize, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                            .addComponent(cmbProduct, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jScrollPane2))
                .addGap(58, 58, 58))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSave)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave)
                    .addComponent(btnCancel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cmbBrands)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbProduct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2)
                    .addComponent(btnClear))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        String Brand = String.valueOf(cmbBrands.getSelectedItem()).trim();
        String Name = String.valueOf(cmbProduct.getSelectedItem()).trim();
        List<String>sizes = new ArrayList<>();
        for (int i = 0; i < list.getModel().getSize(); i++) {
            sizes.add(list.getModel().getElementAt(i));
        }
        Item item = new Item(Name,sizes);
        if (Main.items.containsKey(Brand)){
            List<Item> list = new ArrayList<>(Main.items.get(Brand));
            list.add(item);
            Main.items.put(Brand, list);
        }else {
            Main.items.put(Brand, Collections.singletonList(item));
        }
        for (Item it: Main.allItems){
            if (it.getName().equals(Name)){
                if (it.getSizes().contains(txtSize.getText().trim())){
                    JOptionPane.showMessageDialog(this, "Item of same size and name already exists!");
                }
                else {
                    JOptionPane.showConfirmDialog(this,
                            "Item of same size and name already exists! Add this as new Item size?\n" +
                                    "Available sizes: "+ it.getSizes(),
                            "Existing Item", JOptionPane.YES_NO_CANCEL_OPTION);

                }
            }
        }
        new DataManager().saveData();
        Main.frames.get(AppFrame.HOME.toString()).setVisible(true);
        this.setVisible(false);
        clearForm();
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        Main.frames.get("home").setVisible(true);
        clearForm();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        clearForm();
    }//GEN-LAST:event_btnClearActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        btnCancelActionPerformed(null);
    }//GEN-LAST:event_formWindowClosing

    private void txtSizeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSizeKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSizeKeyTyped

    private void txtSizeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSizeKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode()==10){
            if (txtSize.getText().trim().length()==0)return;
            DefaultListModel<String>model = (DefaultListModel<String>) list.getModel();
            model.add(model.getSize(),txtSize.getText());
            txtSize.setText("");

        }
    }//GEN-LAST:event_txtSizeKeyPressed

    private void txtSizeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSizeFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSizeFocusGained

    public void clearForm(){
        cmbBrands.setSelectedIndex(0);
//        txtProductName.setText("");
        txtSize.setText("");
        list.clearSelection();
        DefaultListModel<String>model = (DefaultListModel<String>) list.getModel();
        model.removeAllElements();
    }

    public void updateBrands(){
        if (Main.items !=null && Main.items.keySet().size()!=0){
            String[] modelData = new String[Main.items.keySet().size()+1];
            modelData[0] = "Select or Add Brand";
            int i=1;
            for(String key: Main.items.keySet()){
                modelData[i] = key;
                i++;
            }
            cmbBrands.setModel(new javax.swing.DefaultComboBoxModel<>(modelData));
        } else cmbBrands.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"Select or Add Brand"}));
    }

    @Override
    public void setVisible(boolean visible){
        super.setVisible(visible);
        if (visible)updateBrands();
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddProduct().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox<String> cmbBrands;
    private javax.swing.JComboBox<String> cmbProduct;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JList<String> list;
    private javax.swing.JTextField txtSize;
    // End of variables declaration//GEN-END:variables
}
