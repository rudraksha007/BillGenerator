/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package me.rudraksha007.billgenerator.GUI;

import me.rudraksha007.billgenerator.AppFrame;
import me.rudraksha007.billgenerator.utilities.DataManager;
import me.rudraksha007.billgenerator.Item;
import me.rudraksha007.billgenerator.Main;

import javax.swing.*;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.ItemEvent;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.util.*;
import java.util.List;

/**
 *
 * @author rudra
 */
public class AddProduct extends javax.swing.JFrame {

    /**
     * Creates new form AddProduct
     */
    public AddProduct() {
        initComponents();
        this.setLocationRelativeTo(null);
        btnCancel.setFocusPainted(false);
        btnClear.setFocusPainted(false);
        btnSave.setFocusPainted(false);
        btnAdd.setFocusPainted(false);
        btnDelete.setFocusPainted(false);
        tblSizes.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                btnDelete.setEnabled(true);
            }
        });
        setupInaccessibleListeners();
    }

    public void setupInaccessibleListeners(){
        cmbBrands.getEditor().getEditorComponent().addKeyListener(new KeyListener() {
            @Override
            public void keyTyped(KeyEvent e) {

            }

            @Override
            public void keyPressed(KeyEvent e) {
                if (e.getKeyCode()==KeyEvent.VK_ENTER)cmbProduct.grabFocus();
            }

            @Override
            public void keyReleased(KeyEvent e) {

            }
        });
        cmbProduct.getEditor().getEditorComponent().addKeyListener(new KeyListener() {
            @Override
            public void keyTyped(KeyEvent e) {

            }

            @Override
            public void keyPressed(KeyEvent e) {
                if (e.getKeyCode()==KeyEvent.VK_ENTER)txtHSN.grabFocus();
            }

            @Override
            public void keyReleased(KeyEvent e) {

            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cmbBrands = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtSize = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        btnSave = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        cmbProduct = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblSizes = new javax.swing.JTable();
        btnAdd = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtHSN = new javax.swing.JTextField();
        txtCost = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Add Product");
        setMinimumSize(new java.awt.Dimension(480, 550));
        setPreferredSize(new java.awt.Dimension(480, 550));
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setText("Brand Name");

        cmbBrands.setEditable(true);
        cmbBrands.setAutoscrolls(true);
        cmbBrands.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbBrandsItemStateChanged(evt);
            }
        });

        jLabel2.setText("Product Name");

        jLabel3.setText("Size and Cost");

        txtSize.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSizeKeyPressed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(2);
        jTextArea1.setText("Enter the size value and press enter to add\nEnter new Brand (in the box) to add");
        jTextArea1.setWrapStyleWord(true);
        jTextArea1.setEnabled(false);
        jScrollPane2.setViewportView(jTextArea1);

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete Size");
        btnDelete.setEnabled(false);
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnClear.setText("Clear ");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        cmbProduct.setEditable(true);
        cmbProduct.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbProductItemStateChanged(evt);
            }
        });

        tblSizes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Size", "Cost"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblSizes.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(tblSizes);
        if (tblSizes.getColumnModel().getColumnCount() > 0) {
            tblSizes.getColumnModel().getColumn(0).setResizable(false);
            tblSizes.getColumnModel().getColumn(1).setResizable(false);
        }

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        jLabel4.setText("HSN Code");

        txtHSN.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtHSNKeyPressed(evt);
            }
        });

        txtCost.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCostKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCostKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnDelete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSave))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 367, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbBrands, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtHSN)
                            .addComponent(cmbProduct, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtCost)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnAdd))
                            .addComponent(txtSize))))
                .addGap(57, 57, 57))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancel)
                    .addComponent(btnSave))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbBrands, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbProduct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtHSN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(txtCost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 231, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnClear)
                    .addComponent(btnDelete))
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        String Brand = ((JTextField) cmbBrands.getEditor().getEditorComponent()).getText().trim();
        String Name = ((JTextField) cmbProduct.getEditor().getEditorComponent()).getText().trim();
        String hsn = txtHSN.getText().trim();
        if (Brand.isEmpty()||Name.isEmpty()||hsn.isEmpty()) {
            JOptionPane.showMessageDialog(this, "All Fields are required!"
                    , "Enter Brand", JOptionPane.ERROR_MESSAGE);
            return;
        }
        Map<String, Float> sizes = new HashMap<>();
        if (this.tblSizes.getModel().getRowCount() < 1) {
            JOptionPane.showMessageDialog(this, "Please Add at least 1 variant"
                    , "Add Variant", JOptionPane.ERROR_MESSAGE);

            return;
        }
        for (int i = 0; i < this.tblSizes.getModel().getRowCount(); i++) {
            sizes.put(String.valueOf(this.tblSizes.getModel().getValueAt(i, 0)),
                    Float.parseFloat(String.valueOf(this.tblSizes.getModel().getValueAt(i, 1))));
        }
        String key = Brand+"/"+Name;
        if (Main.itemMap.containsKey(key)) {
            for (Map.Entry<String, Float>entry: sizes.entrySet()){
                if (Main.itemMap.get(key).getSizes().containsKey(entry.getKey()))continue;
                Main.searchList.add(key+"/"+entry.getKey());
            }
            Main.itemMap.get(key).setSizes(sizes);

        }
        else {
            Item item = new Item(Name, Brand, hsn, sizes);
            Main.itemMap.put(key, item);
            for (String s: sizes.keySet()){
                Main.searchList.add(key+"/"+s);
            }
        }

        new DataManager().saveData();
        Main.frames.get(AppFrame.home).setVisible(true);
        this.setVisible(false);
        clearForm();
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        this.setVisible(false);
        Main.frames.get("home").setVisible(true);
        clearForm();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        clearForm();
    }//GEN-LAST:event_btnClearActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        btnCancelActionPerformed(null);
    }//GEN-LAST:event_formWindowClosing

    private void cmbBrandsItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbBrandsItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            DefaultComboBoxModel<String> model = (DefaultComboBoxModel<String>) cmbProduct.getModel();
            model.removeAllElements();
            model.addElement("");
            if (!(cmbBrands.getSelectedIndex() >= 0)) return;
            String brand = evt.getItem() +"/";
            for (Map.Entry<String,Item> entry : Main.itemMap.entrySet()) {
                if (entry.getKey().toLowerCase().startsWith(brand.toLowerCase()))
                    model.addElement(entry.getValue().getName());
            }
            cmbProduct.setModel(model);
            cmbProduct.grabFocus();
        }
    }//GEN-LAST:event_cmbBrandsItemStateChanged

    private void cmbProductItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbProductItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            if (!(cmbProduct.getSelectedIndex() >= 0)) return;
            if (cmbProduct.getSelectedIndex()==0){
                ((DefaultTableModel)tblSizes.getModel()).setRowCount(0);
                return;
            }
            String brand = String.valueOf(cmbBrands.getSelectedItem());
            Item i = Main.itemMap.get(brand+"/"+cmbProduct.getSelectedItem());
            DefaultTableModel mod = (DefaultTableModel) tblSizes.getModel();
            mod.setRowCount(i.getSizes().size());
            Object[][] data = new Object[i.getSizes().size()][i.getSizes().size()];
            int j = 0;
            for (Map.Entry<String, Float> entry : i.getSizes().entrySet()) {
                data[j] = new Object[]{entry.getKey(), entry.getValue()};
                j++;
            }
            mod.setDataVector(data, new String[]{"Size", "Cost"});
            tblSizes.setModel(mod);
            txtHSN.grabFocus();
        }
    }//GEN-LAST:event_cmbProductItemStateChanged

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        String size = txtSize.getText().trim();
        if (size.isEmpty()) return;
        int cost = Integer.parseInt(String.valueOf(txtCost.getText()));
        if (cost <= 0) return;
        DefaultTableModel model = (DefaultTableModel) tblSizes.getModel();
        for (int i = 0; i < model.getRowCount(); i++) {
            if (model.getValueAt(i, 0).equals(size)) {
                txtSize.setText(null);
                txtCost.setText("");
                return;
            }
        }
        model.insertRow(model.getRowCount(), new Object[]{txtSize.getText().trim(),
                Integer.parseInt(String.valueOf(txtCost.getText()))});
        txtSize.setText("");
        txtCost.setText("");
        txtSize.grabFocus();
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        if (!(tblSizes.getSelectedRow() >= 0)) return;
        DefaultTableModel model = (DefaultTableModel) tblSizes.getModel();
        model.removeRow(tblSizes.getSelectedRow());
        tblSizes.setModel(model);
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        tblSizes.clearSelection();
        btnDelete.setEnabled(false);
    }//GEN-LAST:event_formMouseClicked

    private void txtHSNKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHSNKeyPressed
        if (evt.getKeyCode()!= KeyEvent.VK_ENTER)return;
        if (txtHSN.getText().isEmpty())return;
        txtSize.grabFocus();
    }//GEN-LAST:event_txtHSNKeyPressed

    private void txtSizeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSizeKeyPressed
        if (evt.getKeyCode()!= KeyEvent.VK_ENTER)return;
        if (txtSize.getText().isEmpty())return;
        txtCost.grabFocus();
    }//GEN-LAST:event_txtSizeKeyPressed

    private void txtCostKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCostKeyPressed
        if (evt.getKeyCode()==KeyEvent.VK_ENTER)btnAddActionPerformed(null);
        else if (!Character.isDigit(evt.getKeyChar())) evt.consume();
    }//GEN-LAST:event_txtCostKeyPressed

    private void txtCostKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCostKeyTyped
        if (Character.isDigit(evt.getKeyChar()))return;
        if (evt.getKeyCode()==KeyEvent.VK_ENTER)return;
        evt.setKeyChar('\0');
        Toolkit.getDefaultToolkit().beep();
    }//GEN-LAST:event_txtCostKeyTyped

    public void clearForm() {
        cmbBrands.setSelectedIndex(0);
        cmbProduct.setModel(new DefaultComboBoxModel<>(new String[]{""}));
        cmbProduct.setSelectedIndex(0);
        txtHSN.setText("");
        txtSize.setText("");
        for (int i = 0; i < 2; i++) {
            for (int j = 0; j < tblSizes.getModel().getRowCount(); j++) {
                tblSizes.getModel().setValueAt(null, j, i);
            }
        }
        DefaultTableModel model = (DefaultTableModel) tblSizes.getModel();
        model.setRowCount(0);
        tblSizes.setModel(model);
    }

    public void updateBrands() {
        if (Main.itemMap != null && Main.itemMap.keySet().size() != 0) {
            List<String>list = new ArrayList<>();
            for (String key : Main.itemMap.keySet()) {
                if (list.contains(key.split("/")[0]))continue;
                list.add(key.split("/")[0]);
            }
            DefaultComboBoxModel<String>model = new DefaultComboBoxModel<>();

            model.addAll(list);
            cmbBrands.setModel(model);
        } else cmbBrands.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{""}));
    }

    @Override
    public void setVisible(boolean visible) {
        super.setVisible(visible);
        if (visible) updateBrands();
        cmbBrands.grabFocus();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new AddProduct().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox<String> cmbBrands;
    private javax.swing.JComboBox<String> cmbProduct;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTable tblSizes;
    private javax.swing.JTextField txtCost;
    private javax.swing.JTextField txtHSN;
    private javax.swing.JTextField txtSize;
    // End of variables declaration//GEN-END:variables
}